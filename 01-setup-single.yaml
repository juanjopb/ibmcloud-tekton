apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    app.openshift.io/description: >-
      Sets up the pipeline environment and generates/normalizes a number of
      param values
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'https://github.com/IBM/ibm-garage-tekton-tasks'
    description: >-
      Sets up the pipeline environment and generates/normalizes a number of
      param values
  name: ibm-single-test
  namespace: dev-freelancer
  labels:
    version: 2.0.1
spec:
  params:
    - description: The url for the git repository
      name: git-url
      type: string
    - default: master
      description: 'The git revision (branch, tag, or sha) that should be built'
      name: git-revision
      type: string
    - default: /source
      name: source-dir
      type: string
    - default: ''
      description: The dev image (use image-release for released image)
      name: image-url
      type: string
    - default: ''
      description: The dev image registry server if params.image-url not provided
      name: image-server
      type: string
    - default: ''
      description: The dev image registry namespace if params.image-url not provided
      name: image-namespace
      type: string
    - default: ''
      description: >-
        The dev image registry repository/imagename if params.image-url not
        provided
      name: image-repository
      type: string
    - default: ''
      description: The dev image registry tag if params.image-url not provided
      name: image-tag
      type: string
    - default: ''
      description: The url of final released image
      name: image-release
      type: string
    - default: ''
      description: The openshift/kubernetes namespace to deploy dev app
      name: app-namespace
      type: string
    - default: ''
      description: The app name to be use in openshift/kuberentes deployment and helm chart
      name: app-name
      type: string
    - default: route
      name: deploy-ingress-type
      type: string
    - default: https
      name: health-protocol
      type: string
    - default: /health
      description: 'Endpoint to check health after deployment, liberty uses / not /health'
      name: health-endpoint
      type: string
    - default: 'false'
      description: Flag indicating that a Vulnerability Advisor scan should be performed
      name: scan-image
      type: string
    - default: 'garagecatalyst/ibmcloud-dev:1.1.3'
      name: tools-image
      type: string
    - default: 'docker.io/node:lts-stretch'
      name: js-image
      type: string
  results:
    - description: ''
      name: git-url
    - description: ''
      name: git-revision
    - description: ''
      name: source-dir
    - description: ''
      name: image-url
    - description: ''
      name: image-server
    - description: ''
      name: image-namespace
    - description: ''
      name: image-repository
    - description: ''
      name: image-tag
    - description: ''
      name: image-release
    - description: ''
      name: app-namespace
    - description: ''
      name: app-name
    - description: ''
      name: deploy-ingress-type
    - description: ''
      name: health-protocol
    - description: ''
      name: health-endpoint
    - description: ''
      name: tools-image
    - description: ''
      name: js-image
    - description: ''
      name: scan-image
  stepTemplate:
    name: ''
    resources: {}
    volumeMounts:
      - mountPath: $(params.source-dir)
        name: source
  steps:
    - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: git-credentials
              optional: true
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: git-credentials
              optional: true
        - name: REGISTRY_RELEASE_SERVER
          valueFrom:
            configMapKeyRef:
              key: REGISTRY_URL
              name: ibmcloud-config
              optional: true
        - name: REGISTRY_RELEASE_NAMESPACE
          valueFrom:
            configMapKeyRef:
              key: REGISTRY_NAMESPACE
              name: ibmcloud-config
              optional: true
      image: alpine/git
      name: git-clone
      resources: {}
      script: >
        set +x
        echo "Working in a Single Pipeline"
  volumes:
    - emptyDir: {}
      name: source
